name: backend

on:
  push:
    branches:
      - main
    paths-ignore:
      - packages/frontend/**
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize]
    branches:
      - main

defaults:
  run:
    working-directory: packages/backend

jobs:
  lint:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16.2
        env:
          POSTGRES_DB: db_test
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password123
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5441:5432

      rabbitmq:
        image: rabbitmq:4.0
        env:
          - RABBITMQ_DEFAULT_USER=user
          - RABBITMQ_DEFAULT_PASS=password123
        ports:
          - 5672:5672

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Run lint
        run: |
          source .venv/bin/activate
          task lint

      - name: Run mypy
        run: |
          source .venv/bin/activate
          task mypy

      - name: Run tests
        run: |
          source .venv/bin/activate
          task test
          coverage json
