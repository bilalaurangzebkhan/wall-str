[tool.poetry]
name = "wallstr_backend"
version = "0.1.0"
description = "WallStr backend"
authors = ["Guro Bokum <jiojiajiu@gmail.com>"]
license = "Apache-2.0"
readme = "README.md"
package-mode = false

#[project.scripts]
#wallstr = "wallstr.cli"

[tool.taskipy.tasks]
dev = "uvicorn wallstr.server:app --reload --reload-include .env"
worker = "dramatiq wallstr.worker.main -p 1 -t 2 -Q default"
"worker:heavy" = "dramatiq wallstr.worker.heavy -p 1 -t 1 -Q parse"
lint = "ruff format --check . && ruff check --diff"
format = "ruff format"
mypy = "mypy ."
test = "coverage run -m pytest && coverage report -m"
alembic_print = "bash scripts/alembic.sh"
makemigrations = "alembic revision --autogenerate -m"
migrate = "alembic upgrade head"
migrate_weaviate = "python -m scripts.migrate_weaviate"
generate_openapi = "python -m scripts.generate_openapi_scheme"

[tool.poetry.dependencies]
# crypt is removed in 3.13 but is required by passlib
python = ">=3.12,<3.13"
pydantic = {extras = ["email"], version = "^2.10.5"}
pydantic-settings = "^2.7.1"
dramatiq = {extras = ["rabbitmq", "watch"], version = "^1.17.1"}
redis = {extras = ["hiredis"], version = "^5.2.1"}
fastapi = "^0.115.6"
sqlalchemy = {extras = ["asyncio"], version = "^2.0.36"}
uvicorn = {extras = ["standard"], version = "^0.34.0"}
asyncpg = "^0.30.0"
sqlalchemy-utils = {extras = ["encrypted", "password"], version = "^0.41.2"}
structlog = "^24.4.0"
authlib = "~1.3.0"
python-multipart = "^0.0.20"
boto3 = "<1.36.4"
sse-starlette = "^2.2.1"
langchain = "^0.3.17"
langchain-openai = "^0.3.3"
s3fs = "^2025.2.0"
poetry = "^2.1.1"
tiktoken = "^0.9.0"
langchain-community = "^0.3.18"
sentry-sdk = {extras = ["fastapi"], version = "^2.22.0"}
logfire = {extras = ["fastapi", "sqlalchemy"], version = "^3.7.0"}
langchain-google-genai = "^2.1.0"
langchain-deepseek = "^0.1.2"

[tool.poetry.group.dev.dependencies]
mypy = "^1.14.1"
ruff = "^0.8.6"
taskipy = "^1.14.1"
alembic = "^1.14.0"
alembic-postgresql-enum = "^1.5.0"
pytest = "^8.3.4"
pytest-watch = "^4.2.0"
pytest-dotenv = "^0.5.2"
pytest-asyncio = "^0.25.2"
coverage = "^7.6.10"
httpx = "^0.28.1"
pytest-mock = "^3.14.0"
types-boto3 = {version = "1.36.3", extras = ["boto3", "s3"]}
rich = "^13.9.4"


[tool.poetry.group.worker.dependencies]
unstructured = {extras = ["pdf"], version = "^0.16.17"}
# needs to minimize the size of the docker image for linux
torch = [
  { source = "pypi", markers = "sys_platform != 'linux'"},
  { source = "torch", markers = "sys_platform == 'linux'"}
]
pikepdf = "9.5.1"
unstructured-ingest = {extras = ["s3", "weaviate"], version = "^0.4.4"}
unstructured-inference = "^0.8.7"
weaviate-client = "^4.10.4"
langchain-ollama = "^0.2.3"
pdf2image = "^1.17.0"
pillow = "^11.1.0"
ruamel-yaml = "^0.18.10"
replicate = "0.34.2"


[[tool.poetry.source]]
# https://github.com/python-poetry/poetry/issues/6409#issue-1361622121
name = "torch"
url = "https://download.pytorch.org/whl/cpu"
priority = "explicit"


[tool.mypy]
# https://mypy.readthedocs.io/en/latest/config_file.html
strict_optional = true
show_error_codes = true
show_column_numbers = true
implicit_reexport = false
disallow_any_unimported = false
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_no_return = true
warn_return_any = true
warn_unused_configs = true
strict_equality = true
exclude = ["^examples/"]

[[tool.mypy.overrides]]
module = ["sqlalchemy_utils.*", "authlib.*", "unstructured_ingest.*", "unstructured_inference.*"]
ignore_missing_imports = true

[tool.ruff]
# https://docs.astral.sh/ruff/configuration
line-length = 88 # default
indent-width = 4

[tool.ruff.lint]
extend-select = ["B", "I", "SIM", "UP"]
ignore = ["F401"]

[tool.ruff.format]
indent-style = "space"

[tool.pytest.ini_options]
env_files = ".env.test"
asyncio_mode = "auto"
env_override_existing_values = 1
norecursedirs = ["examples"]
filterwarnings = [
  "ignore:'crypt' is deprecated and slated for removal in Python 3.13"
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
