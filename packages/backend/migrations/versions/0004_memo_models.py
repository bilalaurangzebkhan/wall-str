"""memo_models

Revision ID: 0004
Revises: 0003
Create Date: 2025-03-08 17:54:53.252849

"""

from collections.abc import Sequence
from typing import Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

revision: str = "0004"
down_revision: Union[str, None] = "0003"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum("short", "long", name="memo_type").create(op.get_bind())  # type: ignore[no-untyped-call]
    sa.Enum("text", "memo", name="chat_message_type").create(op.get_bind())  # type: ignore[no-untyped-call]
    op.create_table(
        "memos",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("chat_id", sa.UUID(), nullable=False),
        sa.Column("chat_message_id", sa.UUID(), nullable=False),
        sa.Column("user_prompt", sa.Text(), nullable=False),
        sa.Column(
            "type",
            postgresql.ENUM("short", "long", name="memo_type", create_type=False),
            nullable=False,
        ),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("updated_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["chat_id"],
            ["chats.id"],
            name=op.f("fk_memos_chats__chat_id"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["chat_message_id"],
            ["chat_messages.id"],
            name=op.f("fk_memos_chat_messages__chat_message_id"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["auth_users.id"],
            name=op.f("fk_memos_auth_users__user_id"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_memos")),
    )
    op.create_index(op.f("ix_memos_chat_id"), "memos", ["chat_id"], unique=False)
    op.create_index(
        op.f("ix_memos_chat_message_id"), "memos", ["chat_message_id"], unique=True
    )
    op.create_index(op.f("ix_memos_user_id"), "memos", ["user_id"], unique=False)
    op.create_table(
        "memo_sections",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("chat_id", sa.UUID(), nullable=False),
        sa.Column("memo_id", sa.UUID(), nullable=False),
        sa.Column("group", sa.String(length=255), nullable=False),
        sa.Column("index", sa.Integer(), nullable=False),
        sa.Column("aspect", sa.String(length=255), nullable=False),
        sa.Column("prompt", sa.Text(), nullable=False),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("updated_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["chat_id"],
            ["chats.id"],
            name=op.f("fk_memo_sections_chats__chat_id"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["memo_id"],
            ["memos.id"],
            name=op.f("fk_memo_sections_memos__memo_id"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["auth_users.id"],
            name=op.f("fk_memo_sections_auth_users__user_id"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_memo_sections")),
    )
    op.create_index(
        op.f("ix_memo_sections_chat_id"), "memo_sections", ["chat_id"], unique=False
    )
    op.create_index(
        op.f("ix_memo_sections_memo_id"), "memo_sections", ["memo_id"], unique=False
    )
    op.create_index(
        op.f("ix_memo_sections_user_id"), "memo_sections", ["user_id"], unique=False
    )
    op.add_column(
        "chat_messages",
        sa.Column(
            "type",
            postgresql.ENUM(
                "text", "memo", name="chat_message_type", create_type=False
            ),
            server_default="text",
            nullable=False,
        ),
    )


def downgrade() -> None:
    op.drop_column("chat_messages", "type")
    op.drop_index(op.f("ix_memo_sections_user_id"), table_name="memo_sections")
    op.drop_index(op.f("ix_memo_sections_memo_id"), table_name="memo_sections")
    op.drop_index(op.f("ix_memo_sections_chat_id"), table_name="memo_sections")
    op.drop_table("memo_sections")
    op.drop_index(op.f("ix_memos_user_id"), table_name="memos")
    op.drop_index(op.f("ix_memos_chat_message_id"), table_name="memos")
    op.drop_index(op.f("ix_memos_chat_id"), table_name="memos")
    op.drop_table("memos")
    sa.Enum("text", "memo", name="chat_message_type").drop(op.get_bind())  # type: ignore[no-untyped-call]
    sa.Enum("short", "long", name="memo_type").drop(op.get_bind())  # type: ignore[no-untyped-call]
